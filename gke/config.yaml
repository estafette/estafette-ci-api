integrations:
  github:
    privateKeyPath: /secrets/private-key.pem
    appID: {{.GITHUB_APP_ID}}
    clientID: {{.GITHUB_APP_OAUTH_CLIENT_ID}}
    clientSecret: {{.GITHUB_APP_OAUTH_CLIENT_SECRET}}
    webhookSecret: {{.GITHUB_WEBHOOK_SECRET}}

  bitbucket:
    apiKey: {{.BITBUCKET_API_KEY}}
    appOAuthKey: {{.BITBUCKET_APP_OAUTH_KEY}}
    appOAuthSecret: {{.BITBUCKET_APP_OAUTH_SECRET}}

  slack:
    clientID: {{.SLACK_APP_CLIENT_ID}}
    clientSecret: {{.SLACK_APP_CLIENT_SECRET}}
    appVerificationToken: {{.SLACK_APP_VERIFICATION_TOKEN}}
    appOAuthAccessToken: {{.SLACK_APP_OAUTH_ACCESS_TOKEN}}

  pubsub:
    defaultProject: {{.PUB_SUB_DEFAULT_PROJECT}}
    endpoint: {{.PUB_SUB_ENDPOINT}}
    audience: {{.PUB_SUB_AUDIENCE}}
    serviceAccountEmail: {{.PUB_SUB_SERVICE_ACCOUNT_EMAIL}}
    subscriptionNameSuffix: {{.PUB_SUB_SUBSCRIPTION_SUFFIX}}
    subscriptionIdleExpirationDays: 365

  prometheus:
    serverURL: http://prometheus-server.monitoring.svc.cluster.local
    scrapeIntervalSeconds: 10

  bigquery:
    enable: {{.BIGQUERY_ENABLED}}
    projectID: {{.BIGQUERY_PROJECT}}
    dataset: {{.BIGQUERY_DATASET}}

apiServer:
  baseURL: https://{{.HOSTNAMES}}/
  serviceURL: https://{{.INTERNAL_HOSTNAME}}/

auth:
  iap:
    enable: true
    audience: {{.IAP_AUDIENCE}}
  apiKey: {{.ESTAFETTE_CI_API_KEY}}

jobs:
  namespace: estafette-ci-jobs
  minCPUCores: 0.1
  maxCPUCores: 7.0
  cpuRequestRatio: 1.0
  minMemoryBytes: 67108864
  maxMemoryBytes: 21474836480
  memoryRequestRatio: 1.25

database:
  databaseName: {{.COCKROACH_DATABASE}}
  host: {{.COCKROACH_HOST}}
  insecure: {{.COCKROACH_INSECURE}}
  certificateDir: {{.COCKROACH_CERTS_DIR}}
  port: {{.COCKROACH_PORT}}
  user: {{.COCKROACH_USER}}
  password: {{.COCKROACH_PASSWORD}}

credentials:
- name: 'container-registry-{{.CONTAINER_REPOSITORY_1}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_1}}'
  private: false
  username: '{{.CONTAINER_REPOSITORY_USERNAME_1}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_1}}'
- name: 'container-registry-{{.CONTAINER_REPOSITORY_2}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_2}}'
  private: false
  username: '{{.CONTAINER_REPOSITORY_USERNAME_2}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_2}}'
- name: 'container-registry-{{.CONTAINER_REPOSITORY_3}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_3}}'
  private: false
  username: '{{.CONTAINER_REPOSITORY_USERNAME_3}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_3}}'
- name: 'container-registry-{{.CONTAINER_REPOSITORY_4}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_4}}'
  private: true
  username: '{{.CONTAINER_REPOSITORY_USERNAME_4}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_4}}'
- name: 'container-registry-{{.CONTAINER_REPOSITORY_5}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_5}}'
  private: true
  username: '{{.CONTAINER_REPOSITORY_USERNAME_5}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_5}}'
- name: 'container-registry-{{.CONTAINER_REPOSITORY_6}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_6}}'
  private: true
  username: '{{.CONTAINER_REPOSITORY_USERNAME_6}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_6}}'
- name: 'container-registry-{{.CONTAINER_REPOSITORY_7}}'
  type: 'container-registry'
  repository: '{{.CONTAINER_REPOSITORY_7}}'
  private: false
  username: '{{.CONTAINER_REPOSITORY_USERNAME_7}}'
  password: '{{.CONTAINER_REPOSITORY_PASSWORD_7}}'
- name: '{{.GKE_CREDENTIAL_1}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_1}}
  cluster: {{.GKE_CLUSTER_1}}
  region: {{.GKE_REGION_1}}
  zone: {{.GKE_ZONE_1}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_1}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_1}}
- name: '{{.GKE_CREDENTIAL_2}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_2}}
  cluster: {{.GKE_CLUSTER_2}}
  region: {{.GKE_REGION_2}}
  zone: {{.GKE_ZONE_2}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_2}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_2}}
    certificatesecret: {{.GKE_DEFAULT_CERTIFICATE_2}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_2}}
    autoscale:
      min: 1
      max: 5
    hosts:
    - ${ESTAFETTE_LABEL_APP}.dev.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_2}}
    internalhosts:
    - ${ESTAFETTE_LABEL_APP}.dev.{{.GKE_DEFAULT_INTERNAL_HOST_TOP_LEVEL_DOMAIN_2}}
- name: '{{.GKE_CREDENTIAL_3}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_3}}
  cluster: {{.GKE_CLUSTER_3}}
  region: {{.GKE_REGION_3}}
  zone: {{.GKE_ZONE_3}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_3}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_3}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_3}}
    autoscale:
      min: 2
      max: 10
    hosts:
    - ${ESTAFETTE_LABEL_APP}.staging.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_3}}
    internalhosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_INTERNAL_HOST_TOP_LEVEL_DOMAIN_3}}
- name: '{{.GKE_CREDENTIAL_4}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_4}}
  cluster: {{.GKE_CLUSTER_4}}
  region: {{.GKE_REGION_4}}
  zone: {{.GKE_ZONE_4}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_4}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_4}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_4}}
    autoscale:
      min: 3
      max: 500
    hosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_4}}
    internalhosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_INTERNAL_HOST_TOP_LEVEL_DOMAIN_4}}
- name: '{{.GKE_CREDENTIAL_5}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_5}}
  cluster: {{.GKE_CLUSTER_5}}
  region: {{.GKE_REGION_5}}
  zone: {{.GKE_ZONE_5}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_5}}'
  defaults:
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_5}}
    autoscale:
      min: 3
      max: 50
    hosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_5}}
- name: '{{.GKE_CREDENTIAL_6}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_6}}
  cluster: {{.GKE_CLUSTER_6}}
  region: {{.GKE_REGION_6}}
  zone: {{.GKE_ZONE_6}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_6}}'
  defaults:
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_6}}
    autoscale:
      min: 3
      max: 50
    hosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_6}}
- name: '{{.GKE_CREDENTIAL_7}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_7}}
  cluster: {{.GKE_CLUSTER_7}}
  region: {{.GKE_REGION_7}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_7}}'
  defaults:
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_7}}
    autoscale:
      min: 2
      max: 50
    hosts:
    - ${ESTAFETTE_LABEL_APP}.staging.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_7}}
- name: '{{.GKE_CREDENTIAL_8}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_8}}
  cluster: {{.GKE_CLUSTER_8}}
  region: {{.GKE_REGION_8}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_8}}'
  defaults:
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_8}}
    autoscale:
      min: 3
      max: 100
    hosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_8}}
- name: '{{.GKE_CREDENTIAL_9}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_9}}
  cluster: {{.GKE_CLUSTER_9}}
  region: {{.GKE_REGION_9}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_9}}'
  defaults:
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_9}}
    autoscale:
      min: 3
      max: 100
    hosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_9}}
- name: '{{.GKE_CREDENTIAL_10}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_10}}
  cluster: {{.GKE_CLUSTER_10}}
  region: {{.GKE_REGION_10}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_10}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_10}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_10}}
    autoscale:
      min: 3
      max: 500
    hosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_10}}
    internalhosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_INTERNAL_HOST_TOP_LEVEL_DOMAIN_10}}
- name: '{{.GKE_CREDENTIAL_11}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_11}}
  cluster: {{.GKE_CLUSTER_11}}
  region: {{.GKE_REGION_11}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_11}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_11}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_11}}
    autoscale:
      min: 2
      max: 10
    hosts:
    - ${ESTAFETTE_LABEL_APP}.staging.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_11}}
    internalhosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_INTERNAL_HOST_TOP_LEVEL_DOMAIN_11}}
- name: '{{.GKE_CREDENTIAL_12}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_12}}
  cluster: {{.GKE_CLUSTER_12}}
  region: {{.GKE_REGION_12}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_12}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_12}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_12}}
    autoscale:
      min: 3
      max: 500
    hosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_12}}
    internalhosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_INTERNAL_HOST_TOP_LEVEL_DOMAIN_12}}
- name: '{{.GKE_CREDENTIAL_13}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_13}}
  cluster: {{.GKE_CLUSTER_13}}
  region: {{.GKE_REGION_13}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_13}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_13}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_13}}
    autoscale:
      min: 1
      max: 5
    hosts:
    - ${ESTAFETTE_LABEL_APP}.development.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_13}}
    internalhosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_INTERNAL_HOST_TOP_LEVEL_DOMAIN_13}}
- name: '{{.GKE_CREDENTIAL_14}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_14}}
  cluster: {{.GKE_CLUSTER_14}}
  region: {{.GKE_REGION_14}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_14}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_14}}
    certificatesecret: {{.GKE_DEFAULT_CERTIFICATE_14}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_14}}
    autoscale:
      min: 1
      max: 5
    hosts:
    - ${ESTAFETTE_LABEL_APP}.dev.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_14}}
    internalhosts:
    - ${ESTAFETTE_LABEL_APP}.dev.{{.GKE_DEFAULT_INTERNAL_HOST_TOP_LEVEL_DOMAIN_14}}
- name: '{{.GKE_CREDENTIAL_15}}'
  type: 'kubernetes-engine'
  project: {{.GKE_PROJECT_15}}
  cluster: {{.GKE_CLUSTER_15}}
  region: {{.GKE_REGION_15}}
  serviceAccountKeyfile: '{{.GKE_SA_KEYFILE_15}}'
  defaults:
    namespace: {{.GKE_DEFAULT_NAMESPACE_15}}
    container:
      repository: {{.GKE_DEFAULT_REPOSITORY_15}}
    autoscale:
      min: 2
      max: 10
    hosts:
    - ${ESTAFETTE_LABEL_APP}.staging.{{.GKE_DEFAULT_HOST_TOP_LEVEL_DOMAIN_15}}
    internalhosts:
    - ${ESTAFETTE_LABEL_APP}.{{.GKE_DEFAULT_INTERNAL_HOST_TOP_LEVEL_DOMAIN_15}}
- name: {{.SLACK_WEBHOOK_NAME_1}}
  type: slack-webhook
  workspace: {{.SLACK_WEBHOOK_WORKSPACE_1}}
  webhook: {{.SLACK_WEBHOOK_WEBHOOK_1}}
- name: {{.SLACK_WEBHOOK_NAME_2}}
  type: slack-webhook
  workspace: {{.SLACK_WEBHOOK_WORKSPACE_2}}
  webhook: {{.SLACK_WEBHOOK_WEBHOOK_2}}
- name: {{.NUGET_SERVER_NAME_1}}
  type: nuget-server
  apiUrl: {{.NUGET_SERVER_API_URL_1}}
  apiKey: {{.NUGET_SERVER_API_KEY_1}}
- name: {{.SONARQUBE_SERVER_NAME_1}}
  type: sonarqube-server
  apiUrl: {{.SONARQUBE_SERVER_API_URL_1}}
- name: {{.ROLE_BINDER_NAME_1}}
  type: role-binder
  serviceAccountKeyfile: '{{.ROLE_BINDER_SA_KEYFILE_1}}'
- name: cloudflare
  type: cloudflare
  email: '{{.CLOUDFLARE_API_EMAIL}}'
  key: '{{.CLOUDFLARE_API_KEY}}'

trustedImages:
- path: extensions/git-clone
  injectedCredentialTypes:
  - bitbucket-api-token
  - github-api-token
- path: extensions/git-trigger
  injectedCredentialTypes:
  - bitbucket-api-token
  - github-api-token
- path: extensions/docker
  runDocker: true
  injectedCredentialTypes:
  - container-registry
- path: extensions/prefetch
  runDocker: true
  injectedCredentialTypes:
  - container-registry
- path: extensions/gke
  injectedCredentialTypes:
  - kubernetes-engine
- path: extensions/gcs
  injectedCredentialTypes:
  - kubernetes-engine
- path: extensions/helm
  injectedCredentialTypes:
  - kubernetes-engine
- path: extensions/cloud-function
  injectedCredentialTypes:
  - kubernetes-engine
- path: extensions/bitbucket-status
  injectedCredentialTypes:
  - bitbucket-api-token
- path: extensions/github-status
  injectedCredentialTypes:
  - github-api-token
- path: extensions/github-release
  injectedCredentialTypes:
  - github-api-token
- path: extensions/slack-build-status
  injectedCredentialTypes:
  - slack-webhook
- path: extensions/npm-audit
  injectedCredentialTypes:
  - slack-webhook
- path: extensions/dotnet
  injectedCredentialTypes:
  - nuget-server
  - sonarqube-server
- path: estafette/estafette-ci-builder
  runPrivileged: true
- path: docker
  runDocker: true
- path: golang
  runDocker: true
  allowCommands: true
- path: {{.TRUSTED_IMAGE_PATH_1}}
  runDocker: true
  injectedCredentialTypes:
  - container-registry
- path: {{.TRUSTED_IMAGE_PATH_2}}
  injectedCredentialTypes:
  - role-binder
  - bitbucket-api-token
- path: extensions/cloudflare-purge
  injectedCredentialTypes:
  - cloudflare
- path: bsycorp/kind
  runPrivileged: true

# registryMirror: {{.REGISTRY_MIRROR}}
dindMtu: {{.DIND_MTU}}
dindBip: {{.DIND_BIP}}
dindNetwork:
  name: {{.DIND_NETWORK_NAME}}
  subnet: {{.DIND_NETWORK_SUBNET}}
  gateway: {{.DIND_NETWORK_GATEWAY}}