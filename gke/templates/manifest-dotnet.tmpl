# https://estafette.io/usage/manifest/
labels:
  team: {{.TeamNamePlaceholder}}
  language: dotnet-core

version:
  semver:
    major: 0
    minor: 0

stages:
  restore:
    image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
    env:
      PRIVATE_NUGET_SOURCE: {{.PrivateNugetSource}}
    commands:
    - dotnet restore --source https://www.nuget.org/api/v1 --source ${PRIVATE_NUGET_SOURCE} --packages .nuget/packages

  build:
    image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
    commands:
    - dotnet build --configuration Release /p:Version=${ESTAFETTE_BUILD_VERSION} --no-restore

  unit-tests:
    image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
    commands:
    - ls test/**/*.UnitTests.csproj | xargs -n1 dotnet test --configuration Release --no-build --no-restore

  integration-tests:
    image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
    commands:
    - ls test/**/*.IntegrationTests.csproj | xargs -n1 dotnet test --configuration Release --no-build --no-restore

  publish:
    image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
    commands:
    - dotnet publish src/*.WebService --configuration Release --runtime linux-x64 /p:Version=${ESTAFETTE_BUILD_VERSION} --output ${PWD}/publish --no-restore

  bake:
    image: extensions/docker:stable
    action: build
    repositories:
    - {{.DefaultDockerRepository}}
    path: ./publish

  push-to-docker-registry:
    image: extensions/docker:stable
    action: push
    repositories:
    - {{.DefaultDockerRepository}}

  slack-notify:
    image: extensions/slack-build-status:stable
    workspace: {{.SlackWorkspace}}
    channels:
    - '#builds-${ESTAFETTE_LABEL_TEAM}'
    when:
      status == 'failed'

releases:
  development:
    triggers:
    - pipeline:
        name: self
        branch: .+
    stages:
      deploy:
        image: extensions/gke:stable
        visibility: private
        container:
          port: 5000
          env:
            ENV1: value
          cpu:
            request: 100m
            limit: 100m
          memory:
            request: 256Mi
            limit: 256Mi

      slack-notify:
        image: extensions/slack-build-status:stable
        workspace: {{.SlackWorkspace}}
        channels:
        - '#releases-${ESTAFETTE_LABEL_TEAM}'
        when:
          status == 'failed'

  staging:
    stages:
      deploy:
        image: extensions/gke:stable
        visibility: private
        container:
          port: 5000
          env:
            ENV1: value
          cpu:
            request: 100m
            limit: 100m
          memory:
            request: 256Mi
            limit: 256Mi

      slack-notify:
        image: extensions/slack-build-status:stable
        workspace: {{.SlackWorkspace}}
        channels:
        - '#releases-${ESTAFETTE_LABEL_TEAM}'
        when:
          status == 'failed'

  production:
    actions:
    - name: deploy-canary
    - name: deploy-stable
    - name: rollback-canary
    stages:
      deploy:
        image: extensions/gke:stable
        visibility: private
        container:
          port: 5000
          env:
            ENV1: value
          cpu:
            request: 100m
            limit: 100m
          memory:
            request: 256Mi
            limit: 256Mi

      slack-notify:
        image: extensions/slack-build-status:stable
        workspace: {{.SlackWorkspace}}
        channels:
        - '#releases-${ESTAFETTE_LABEL_TEAM}'
        when:
          status == 'succeeded' ||
          status == 'failed'