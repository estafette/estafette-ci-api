# https://estafette.io/usage/manifest/
labels:
  team: {{.TeamNamePlaceholder}}
  language: golang

version:
  semver:
    major: 0
    minor: 0

stages:
  build:
    image: golang:1.13.4-alpine
    workDir: /go/src/${ESTAFETTE_GIT_SOURCE}/${ESTAFETTE_GIT_OWNER}/${ESTAFETTE_GIT_NAME}
    env:
      CGO_ENABLED: 0
      GOOS: linux
    commands:
    - go test `go list ./... | grep -v /vendor/`
    - go build -a -installsuffix cgo -o ./publish/${ESTAFETTE_GIT_NAME} .

  bake:
    image: extensions/docker:stable
    action: build
    inline: |
      FROM scratch
      
      COPY ca-certificates.crt /etc/ssl/certs/
      COPY ${ESTAFETTE_GIT_NAME} /

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    repositories:
    - {{.DefaultDockerRepository}}
    path: ./publish
    copy:
    - /etc/ssl/certs/ca-certificates.crt

  push-to-docker-registry:
    image: extensions/docker:stable
    action: push
    repositories:
    - {{.DefaultDockerRepository}}

  slack-notify:
    image: extensions/slack-build-status:stable
    workspace: {{.SlackWorkspace}}
    channels:
    - '#builds-${ESTAFETTE_LABEL_TEAM}'
    when:
      status == 'failed'

releases:
  development:
    triggers:
    - pipeline:
        name: self
        branch: .+
    stages:
      deploy:
        image: extensions/gke:stable
        visibility: private
        container:
          port: 5000
          env:
            ENV1: value
          cpu:
            request: 100m
            limit: 100m
          memory:
            request: 256Mi
            limit: 256Mi

      slack-notify:
        image: extensions/slack-build-status:stable
        workspace: {{.SlackWorkspace}}
        channels:
        - '#releases-${ESTAFETTE_LABEL_TEAM}'
        when:
          status == 'failed'

  staging:
    stages:
      deploy:
        image: extensions/gke:stable
        visibility: private
        container:
          port: 5000
          env:
            ENV1: value
          cpu:
            request: 100m
            limit: 100m
          memory:
            request: 256Mi
            limit: 256Mi

      slack-notify:
        image: extensions/slack-build-status:stable
        workspace: {{.SlackWorkspace}}
        channels:
        - '#releases-${ESTAFETTE_LABEL_TEAM}'
        when:
          status == 'failed'

  production:
    actions:
    - name: deploy-canary
    - name: deploy-stable
    - name: rollback-canary
    stages:
      deploy:
        image: extensions/gke:stable
        visibility: private
        container:
          port: 5000
          env:
            ENV1: value
          cpu:
            request: 100m
            limit: 100m
          memory:
            request: 256Mi
            limit: 256Mi

      slack-notify:
        image: extensions/slack-build-status:stable
        workspace: {{.SlackWorkspace}}
        channels:
        - '#releases-${ESTAFETTE_LABEL_TEAM}'
        when:
          status == 'succeeded' ||
          status == 'failed'