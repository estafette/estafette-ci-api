# Default values for estafette-ci.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#
# APPLICATION SETTINGS
#

application:
  # port the main application container is listening on
  port: 5000

# prometheus metrics settings
metrics:
  enabled: true
  path: /metrics
  port: 9001
  scheme: http

jaeger:
  # if enabled the jaeger tracing library sends traces into the jaeger backend, otherwise the NoopTracer is used
  enable: false
  # probabilistic, const or remote
  samplerType: remote
  # provides the probability if samplerType is probabilistic or remote (until remote config is received)
  samplerParam: 0.001

# list of hostnames the installation listens to
hostnames:
- ci.estafette.io

openresty:
  enabled: true
  image:
    repository: estafette/openresty-sidecar
    tag: 6f4ddb92882349c8a3058b21fc2d75f246e7ce68a470c5533da3b205fd6381e4
    tagIsSha256: true
    pullPolicy: IfNotPresent
  clientBodyBufferSize: 8k
  clientBodyTimeout: 60s
  clientHeaderTimeout: 60s
  clientMaxBodySize: 128m
  gracefulShutdownDelaySeconds: 15
  proxyBuffersNumber: 4
  proxyBuffersSize: 4k
  proxyBufferSize: 4k
  proxyConnectTimeout: 60s
  proxyReadTimeout: 60s
  proxySendTimeout: 60s
  sendTimeout: 60s
  resources:
    requests:
      cpu: 50m
      memory: 30Mi
    limits:
      cpu: 75m
      memory: 50Mi

secret:
  # if set to true the values are already base64 encoded when provided, otherwise the template performs the base64 encoding
  valuesAreBase64Encoded: false

  # the aes-256 key to encrypt/decrypt estafette secrets
  decryptionKey:

  # private key file for github app to communicate with the github api
  githubPrivateKey:

  # when using estafette-letsencrypt-certificate controller to fetch key files, set this to true and leave googleServiceAccountKeyfileJson empty
  useLetsEncryptCertificateAnnotation: false

  # pem file for certificate
  certificatePemFile:

  # private key file for certificate
  certificateKeyFile:

jobs:
  # the namespace in which build/release jobs are created
  namespace:

integrations:
  github:
    privateKeyPath: /secrets/private-key.pem
    appID:
    clientID:
    clientSecret:
    webhookSecret:

  bitbucket:
    apiKey: 
    appOAuthKey: 
    appOAuthSecret: 

  slack:
    clientID: 
    clientSecret:
    appVerificationToken:
    appOAuthAccessToken:

  pubsub:
    defaultProject:
    endpoint:
    audience:
    serviceAccountEmail:
    subscriptionNameSuffix:
    subscriptionIdleExpirationDays: 365

  prometheus:
    serverURL: http://prometheus-server.monitoring.svc.cluster.local
    scrapeIntervalSeconds: 10

  bigquery:
    enable:
    projectID:
    dataset:

apiServer:
  baseURL:
  serviceURL:

auth:
  iap:
    enable:
    audience:
  apiKey:

jobs:
  namespace:
  minCPUCores:
  maxCPUCores:
  cpuRequestRatio:
  minMemoryBytes:
  maxMemoryBytes:
  memoryRequestRatio:

database:
  databaseName:
  host:
  insecure:
  certificateDir:
  port:
  user:
  password:

credentials:
- name:
  type: 'container-registry'
  repository:
  private: false
  username:
  password:

trustedImages:
- path: extensions/git-clone
  injectedCredentialTypes:
  - bitbucket-api-token
  - github-api-token
- path: extensions/git-trigger
  injectedCredentialTypes:
  - bitbucket-api-token
  - github-api-token
- path: extensions/docker
  runDocker: true
  injectedCredentialTypes:
  - container-registry
- path: extensions/prefetch
  runDocker: true
  injectedCredentialTypes:
  - container-registry
- path: extensions/gke
  injectedCredentialTypes:
  - kubernetes-engine
- path: extensions/gcs
  injectedCredentialTypes:
  - kubernetes-engine
- path: extensions/cloud-function
  injectedCredentialTypes:
  - kubernetes-engine
- path: extensions/bitbucket-status
  injectedCredentialTypes:
  - bitbucket-api-token
- path: extensions/github-status
  injectedCredentialTypes:
  - github-api-token
- path: extensions/github-release
  injectedCredentialTypes:
  - github-api-token
- path: extensions/slack-build-status
  injectedCredentialTypes:
  - slack-webhook
- path: extensions/npm-audit
  injectedCredentialTypes:
  - slack-webhook
- path: extensions/dotnet
  injectedCredentialTypes:
  - nuget-server
  - sonarqube-server
- path: estafette/estafette-ci-builder
  runPrivileged: true
  whitelistedPipelines: github.com/estafette/estafette-ci-builder
- path: extensions/cloudflare-purge
  injectedCredentialTypes:
  - cloudflare
- path: bsycorp/kind
  runPrivileged: true

registryMirror:
registryMdindMtuirror:
dindBip:
dindNetwork:
  name:
  subnet:
  gateway:

# poddisruptionbudget settings
pdb:
  maxUnavailable: 1

# horizontalpodautoscaler settings
hpa:
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

#
# GENERIC SETTINGS
#

replicaCount: 1

image:
  repository: estafette/estafette-ci-api
  # The tag can be set to override the appVersion getting used as the image tag
  tag:
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

rbac:
  # Specifies whether roles and bindings should be created
  enable: true

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # requests:
  #   cpu: 60m
  #   memory: 236Mi
  # limits:
  #   cpu: 120m
  #   memory: 472Mi

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 10
      preference:
        matchExpressions:
        - key: cloud.google.com/gke-preemptible
          operator: In
          values:
          - "true"

# pass (additional) arguments to the container
extraArgs: []

# use to set extra environment variables
extraEnv: {}

# use to add extra labels
extraLabels: {}

# use to add extra labels to podspec for getting their values in prometheus
extraPodLabels: {}
