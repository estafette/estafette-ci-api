apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "estafette-ci-api.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "estafette-ci-api.labels" . | indent 4 }}
data:
  config.yaml: |-
    {{- with .Values.config.integrations }}
    integrations:
      {{- with .github }}
      {{- if .enable }}
      github:
        enable: true
        privateKeyPath: {{.privateKeyPath}}
        appID: {{.appID}}
        clientID: {{.clientID}}
        clientSecret: {{.clientSecret}}
        webhookSecret: {{.webhookSecret}}
      {{- end }}
      {{- end }}

      {{- with .bitbucket }}
      {{- if .enable }}
      bitbucket:
        enable: true
        apiKey: {{.apiKey}}
        appOAuthKey: {{.appOAuthKey}}
        appOAuthSecret: {{.appOAuthSecret}}
      {{- end }}
      {{- end }}

      {{- with .slack }}
      {{- if .enable }}
      slack:
        enable: true
        clientID: {{.clientID}}
        clientSecret: {{.clientSecret}}
        appVerificationToken: {{.appVerificationToken}}
        appOAuthAccessToken: {{.appOAuthAccessToken}}
      {{- end }}
      {{- end }}

      {{- with .pubsub }}
      {{- if .enable }}
      pubsub:
        enable: true
        defaultProject: {{.defaultProject}}
        endpoint: {{.endpoint}}
        audience: {{.audience}}
        serviceAccountEmail: {{.serviceAccountEmail}}
        subscriptionNameSuffix: {{.subscriptionNameSuffix}}
        subscriptionIdleExpirationDays: 365
      {{- end }}
      {{- end }}

      {{- with .prometheus }}
      {{- if .enable }}
      prometheus:
        enable: true
        serverURL: {{.serverURL}}
        scrapeIntervalSeconds: {{.scrapeIntervalSeconds}}
      {{- end }}
      {{- end }}

      {{- with .bigquery }}
      {{- if .enable }}
      bigquery:
        enable: true
        projectID: {{.projectID}}
        dataset: {{.dataset}}
      {{- end }}
      {{- end }}
    {{- end }}

    {{- with .Values.config.apiServer }}
    apiServer:
      baseURL: {{.baseURL}}
      serviceURL: {{.serviceURL}}
    {{- end }}

    {{- with .Values.config.auth }}
    auth:
      {{- with .iap }}
      iap:
        enable: {{.enable}}
        audience: {{.audience}}
      {{- end }}
      apiKey: {{.apiKey}}
    {{- end }}

    {{- with .Values.config.jobs }}
    jobs:
      namespace: {{.namespace}}
      minCPUCores: {{.minCPUCores}}
      maxCPUCores: {{.maxCPUCores}}
      cpuRequestRatio: {{.cpuRequestRatio}}
      minMemoryBytes: {{.minMemoryBytes}}
      maxMemoryBytes: {{.maxMemoryBytes}}
      memoryRequestRatio: {{.memoryRequestRatio}}
    {{- end }}

    {{- with .Values.config.database }}
    database:
      databaseName: {{.databaseName}}
      host: {{.host}}
      insecure: {{.insecure}}
      certificateDir: {{.certificateDir}}
      port: {{.port}}
      user: {{.user}}
      password: {{.password}}
    {{- end }}

    {{- with .Values.config.credentials }}
    credentials:
    {{- toYaml . | nindent 4 }}
    {{- end }}

    {{- with .Values.config.trustedImages }}
    trustedImages:
    {{- toYaml . | nindent 4 }}
    {{- end }}

    {{- with .Values.config.docker.registryMirror }}
    registryMirror: {{.}}
    {{- end }}
    {{- with .Values.config.docker.dindMtu }}
    registryMdindMtuirror: {{.}}
    {{- end }}
    {{- with .Values.config.docker.dindBip }}
    dindBip: {{.}}
    {{- end }}
    {{- with .Values.config.docker.dindNetwork }}
    dindNetwork:
      name: {{.name}}
      subnet: {{.subnet}}
      gateway: {{.gateway}}
    {{- end }}