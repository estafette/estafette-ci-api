builder:
  track: dev

labels:
  type: service
  app-group: estafette-ci
  team: estafette
  language: golang

version:
  semver:
    major: 1
    minor: 0
    patch: 0
    labelTemplate: '{{branch}}-{{auto}}'
    releaseBranch: 1.0.0

triggers:
- pipeline:
    name: github.com/estafette/estafette-ci-db-migrator
    branch: master
  builds:
    branch: master

stages:
  build-lint-and-package:
    parallelStages:
      build:
        image: golang:1.14.4-alpine3.12
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOGC: off
        commands:
        - go test -short ./...
        - go build -a -installsuffix cgo -ldflags "-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}" -o ./publish/${ESTAFETTE_GIT_NAME} .
    
      lint-helm-chart:
        image: extensions/helm:dev
        action: lint

      package-helm-chart:
        image: extensions/helm:dev
        action: package

  integration-tests-prepare:
    services:
    - name: cockroachdb
      multiStage: true
      image: cockroachdb/cockroach:v20.1.4
      shell: /bin/bash
      env:
        COCKROACH_SKIP_ENABLING_DIAGNOSTIC_REPORTING: "true"
      readiness:
        path: /health?ready=1
        port: 8080
        timeoutSeconds: 120
      commands:
      - /cockroach/cockroach start-single-node --insecure --advertise-addr cockroachdb

    image: estafette/estafette-ci-db-migrator:0.1
    env:
      COCKROACH_CONNECTION_STRING: postgresql://root@cockroachdb:26257/defaultdb?sslmode=disable
      ESTAFETTE_LOG_FORMAT: console

  integration-tests:
    image: golang:1.14.4-alpine3.12
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOGC: off
    commands:
    - go test -run TestIntegration ./...

  bake:
    image: extensions/docker:dev
    action: build
    inline: |
      FROM scratch

      LABEL maintainer="estafette.io" \
            description="The ${ESTAFETTE_GIT_NAME} is the component that handles api requests and starts build jobs using the estafette-ci-builder"

      COPY ca-certificates.crt /etc/ssl/certs/
      COPY ${ESTAFETTE_GIT_NAME} /

      ENV GRACEFUL_SHUTDOWN_DELAY_SECONDS="20"

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    repositories:
    - estafette
    path: ./publish
    copy:
    - /etc/ssl/certs/ca-certificates.crt

  check-container:
    parallelStages:
      check-efficiency:
        image: extensions/docker:dev
        action: dive
        repositories:
        - estafette

      vulnerability-scan:
        image: extensions/docker:dev
        action: trivy
        repositories:
        - estafette

  push-to-docker-hub:
    image: extensions/docker:dev
    action: push
    repositories:
    - estafette

  test-helm-chart:
    services:
    - name: kubernetes
      image: bsycorp/kind:latest-1.12
      readiness:
        path: /kubernetes-ready
        port: 10080
    image: extensions/helm:dev
    action: test
    values: |-
      jobs:
        namespace: estafette-ci-jobs
      secret:
        valuesAreBase64Encoded: true
        decryptionKey: MVBzdlhWT01raGZBUXVCSWNJR0N0eklkUFhOVjBOWUcK
        # generated with
        # > openssl req -x509 -sha256 -nodes -days 1024 -newkey rsa:2048 -keyout certificate.key -out certificate.crt
        # > cat certificate.crt certificate.key | base64
        certificatePemFile: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZRQ0NRRFBPeGRLY3hQOXhqQU5CZ2txaGtpRzl3MEJBUXNGQURCSU1Rc3dDUVlEVlFRR0V3SkoKVHpFU01CQUdBMVVFQ2d3SlJYTjBZV1psZEhSbE1Rc3dDUVlEVlFRTERBSkRTVEVZTUJZR0ExVUVBd3dQWTJrdQpaWE4wWVdabGRIUmxMbWx2TUI0WERURTVNVEV4TWpFMk1UVXpPRm9YRFRJeU1Ea3dNVEUyTVRVek9Gb3dTREVMCk1Ba0dBMVVFQmhNQ1NVOHhFakFRQmdOVkJBb01DVVZ6ZEdGbVpYUjBaVEVMTUFrR0ExVUVDd3dDUTBreEdEQVcKQmdOVkJBTU1EMk5wTG1WemRHRm1aWFIwWlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQwpBUW9DZ2dFQkFLdzJGUEx5N2JSZlFoaDBwQSswVkMzSGplZzB6a2YxaGF4ZDNGM3ZyUHpUOC9IeVVFSFc3T0JXCmlVL2Jnb0dleTN2V3RPMGZDY1VtUTEvenZnSUIvbWlsRnRoMldyTmU4N1FMUEVQeXlMZ2FRVlZjYUxNUGtPOVkKZjZOSCs5RG9tOWhvVFhFbEJPUVYyMGt5a1BXKzZ2UUo1TEpETTA4Z0pJanJkUklzcFB0czRMUi9XUjFkbEM3WQpUYjhqTkVwblR6OFlLU0JYcGJzZ0o0d1A4UVhLbXJLRUlWaDFSNzBMM0Rwdmtoeld0eFVwZDdUanVtQkVPN0owCnJLN1VIRStpMDFmM1pRb0IrZFA2YWEyRWdsaDVoVzFlc2pIT3YrOXI0M010R2NVYklVVFJYRlRYQXhXN2V5UW8KVVhteU9PKzg4OTNwSVZEZDRQamdHZTZnTG9xMlBpa0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQprWlZmeDM4RkRrUExGNC9WYzBvdVgyRTNVTC9GT3N5UTZDL3J3STE3aEIrdk1GMGZwaTlxMnJrMXBPc011THlvCm9oVTFRZ3R5TDRHMFdWTEh3b2ZoTS9rTlo3ZlZHWm9GYjNFbFZYODBuKzNZMFFmUTE5Q2pYMFo1MUxaTjY2N0gKUlFiQmhMOFZyU3BseTluN0xmZ2pZLzZKZ2VnS0hkQnowNWlwMFRENmFiaHkxbHVFM1FSNm4vTm5FVnhnQ3V6dQpqZnZzSmF4OUlGSnNrbVYrNXBvOUM5TTZ5eDJ5VWdNZXY4eHM4VzBsZTZLOGJGWG45cEk3ZE1LakFVNlZTQWFCCkVjai81YndNOHE0ODRoRXgzL1JkSkE3VS9pa3N2R3BjU0dlSVpaS0l1UG9FR0l5bVA3emtucE0xRVluSlc0TXMKY2FwVXVWNzUvQXNmL2VXNkMzbFM3QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQ3NOaFR5OHUyMFgwSVkKZEtRUHRGUXR4NDNvTk01SDlZV3NYZHhkNzZ6ODAvUHg4bEJCMXV6Z1ZvbFAyNEtCbnN0NzFyVHRId25GSmtOZgo4NzRDQWY1b3BSYllkbHF6WHZPMEN6eEQ4c2k0R2tGVlhHaXpENUR2V0gralIvdlE2SnZZYUUxeEpRVGtGZHRKCk1wRDF2dXIwQ2VTeVF6TlBJQ1NJNjNVU0xLVDdiT0MwZjFrZFhaUXUyRTIvSXpSS1owOC9HQ2tnVjZXN0lDZU0KRC9FRnlwcXloQ0ZZZFVlOUM5dzZiNUljMXJjVktYZTA0N3BnUkR1eWRLeXUxQnhQb3ROWDkyVUtBZm5UK21tdApoSUpZZVlWdFhySXh6ci92YStOekxSbkZHeUZFMFZ4VTF3TVZ1M3NrS0ZGNXNqanZ2UFBkNlNGUTNlRDQ0Qm51Cm9DNkt0ajRwQWdNQkFBRUNnZ0VBYkk0cTVucjhISmR2c3JyVU1KSWIvaitzMUpOMDlTZHYvQmV1c2doRG81eDQKU2l2Vks2dXY1anFtbEJCclZBb2xld3I5UWZ3dXpIZ3lRR29GZkg2RlFMSFFsT01HaWN0eEZDMkE3OVE3Y3RJYQpIUlVEYXR5RklGdEpHa1JtR0dxSTB3SHN6MFhtcjJDWHVxeUZkR1BFOTlERXVScGpYWjJGYWtvQ29sSkNMYnFMCnFnOWtPOHpUYThRUDZrQnZwWnIxQk1BL2pIaGFXK0J4clZaanZUVlNiNlA5UEduY3pLWnExZE9EU2NHekpadWoKNHBGNWFtZ1NBS0JPSVAwTzVMQW9aQ3FHckRQNi9odkg5K1VNVmdUSmRxUFJWU2ppZ3J1M2ZaNndDOU0wTVQ0TApySUJLZnJMdWh1Vmk0Z1Vpci81YUc1NDJwSFhDb2xoTjM2U1FtT01UZ1FLQmdRRFZyQ3FMQnJSeU5OVUMwRnNMCjVRZXRnUGRWMVc0YjhtNmtQbjZpR1ZBZUttMWpkaG9pOWJFSEVYNDQvbjRKMlM2Q0g5WlB4bFNOUU41Uy9uMjEKQ2ZweXpzVkJDWURYRjUyMzJHemQzdExCLzEwTHl6YnBjc0x4OHoveURMWDFUNytySzF2akFXRjVneXhOWk16RgpoUzU4S0t5OG0zMWJjTVM5TGtEbTlIS2Qzd0tCZ1FET1UxRlliZ0RpSzlhQkxWZVFRLzZBQ01FRmxMcC84UzJQCjZKWERabmt6SWFFU2pkYUdtTzhETUJkMnJub0NkTXl5a2I5UURpRGhqTmEwZ0JVUXplU1Q5NGVKKzhkSnNCLzYKZkN6VmZCK0hYOWhhNUw3QlpVV2lCanZMUDgrb0VCOWt3TFRpblRFVFVML2ZKeGIrNHJlbWl3dmxZczhnY3g1dgpQaTBDbUlXVTl3S0JnQUk0Wk1USEVBN3p2NWJrNVYxTlJ2UWxsK3hiYUdaLzhXaGhnZDFiVi9ySVJCUzVnSElHCmpZMWVRQ3FGY25mVnV1YjlQN1BhZ3J4cEJTWmxvSmJHQU1VNm90QVhNakNKL1VpUXhpalVET3FaSmJWZXFqWm8KeTkvSndFdGFtSFZ4RzdQQ29wVE1TZUFDWGU1Nzhxakd4b0hoeGxHN1orVVFXZXNCVlFsUlZ2T1BBb0dBTSt1cgprTUU5MzZ5QWNrbGl1NThnc0QrRHMwL1dEdFEyVHZ5TWszdDZERy91QktsRXp1STFZMnY2dTViMGhTRzNVVWgwCkNFVkY2UHgwRzBBUURRYUMrdWxUWmxuQnNMMXRqcThvNlNBdkh2WHprQXY0Sk5yRFJ4NmlkV2M5Ym1HQVJPNXAKbG8xUUNEaE4wRzRaejFKbVBMYkk2NVNONHZDVlBCRTlhbVhQVjhrQ2dZQmlEMGpPVEx3YVNRTHRscWl0OVdSSgpMK1pCeVlEYk40WE9VNEpweDFDeTdHUStPak5GdWtkZUZXejNBTko3L216MTlnMmV4NjB2cjhWeTVpdzhZQjZWCnpUOUxDRDNNb0dsblAyMUY5S29PZzA5UXgzRGFySTd5S3Y4STI5UG82T0M0dzJYazV2SER5MW1nRSt1aFFSZHoKRXB1QXo5aXpKN3c3dVlUOWI4YnVJZz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
        # > cat certificate.key | base64
        certificateKeyFile: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQ3NOaFR5OHUyMFgwSVkKZEtRUHRGUXR4NDNvTk01SDlZV3NYZHhkNzZ6ODAvUHg4bEJCMXV6Z1ZvbFAyNEtCbnN0NzFyVHRId25GSmtOZgo4NzRDQWY1b3BSYllkbHF6WHZPMEN6eEQ4c2k0R2tGVlhHaXpENUR2V0gralIvdlE2SnZZYUUxeEpRVGtGZHRKCk1wRDF2dXIwQ2VTeVF6TlBJQ1NJNjNVU0xLVDdiT0MwZjFrZFhaUXUyRTIvSXpSS1owOC9HQ2tnVjZXN0lDZU0KRC9FRnlwcXloQ0ZZZFVlOUM5dzZiNUljMXJjVktYZTA0N3BnUkR1eWRLeXUxQnhQb3ROWDkyVUtBZm5UK21tdApoSUpZZVlWdFhySXh6ci92YStOekxSbkZHeUZFMFZ4VTF3TVZ1M3NrS0ZGNXNqanZ2UFBkNlNGUTNlRDQ0Qm51Cm9DNkt0ajRwQWdNQkFBRUNnZ0VBYkk0cTVucjhISmR2c3JyVU1KSWIvaitzMUpOMDlTZHYvQmV1c2doRG81eDQKU2l2Vks2dXY1anFtbEJCclZBb2xld3I5UWZ3dXpIZ3lRR29GZkg2RlFMSFFsT01HaWN0eEZDMkE3OVE3Y3RJYQpIUlVEYXR5RklGdEpHa1JtR0dxSTB3SHN6MFhtcjJDWHVxeUZkR1BFOTlERXVScGpYWjJGYWtvQ29sSkNMYnFMCnFnOWtPOHpUYThRUDZrQnZwWnIxQk1BL2pIaGFXK0J4clZaanZUVlNiNlA5UEduY3pLWnExZE9EU2NHekpadWoKNHBGNWFtZ1NBS0JPSVAwTzVMQW9aQ3FHckRQNi9odkg5K1VNVmdUSmRxUFJWU2ppZ3J1M2ZaNndDOU0wTVQ0TApySUJLZnJMdWh1Vmk0Z1Vpci81YUc1NDJwSFhDb2xoTjM2U1FtT01UZ1FLQmdRRFZyQ3FMQnJSeU5OVUMwRnNMCjVRZXRnUGRWMVc0YjhtNmtQbjZpR1ZBZUttMWpkaG9pOWJFSEVYNDQvbjRKMlM2Q0g5WlB4bFNOUU41Uy9uMjEKQ2ZweXpzVkJDWURYRjUyMzJHemQzdExCLzEwTHl6YnBjc0x4OHoveURMWDFUNytySzF2akFXRjVneXhOWk16RgpoUzU4S0t5OG0zMWJjTVM5TGtEbTlIS2Qzd0tCZ1FET1UxRlliZ0RpSzlhQkxWZVFRLzZBQ01FRmxMcC84UzJQCjZKWERabmt6SWFFU2pkYUdtTzhETUJkMnJub0NkTXl5a2I5UURpRGhqTmEwZ0JVUXplU1Q5NGVKKzhkSnNCLzYKZkN6VmZCK0hYOWhhNUw3QlpVV2lCanZMUDgrb0VCOWt3TFRpblRFVFVML2ZKeGIrNHJlbWl3dmxZczhnY3g1dgpQaTBDbUlXVTl3S0JnQUk0Wk1USEVBN3p2NWJrNVYxTlJ2UWxsK3hiYUdaLzhXaGhnZDFiVi9ySVJCUzVnSElHCmpZMWVRQ3FGY25mVnV1YjlQN1BhZ3J4cEJTWmxvSmJHQU1VNm90QVhNakNKL1VpUXhpalVET3FaSmJWZXFqWm8KeTkvSndFdGFtSFZ4RzdQQ29wVE1TZUFDWGU1Nzhxakd4b0hoeGxHN1orVVFXZXNCVlFsUlZ2T1BBb0dBTSt1cgprTUU5MzZ5QWNrbGl1NThnc0QrRHMwL1dEdFEyVHZ5TWszdDZERy91QktsRXp1STFZMnY2dTViMGhTRzNVVWgwCkNFVkY2UHgwRzBBUURRYUMrdWxUWmxuQnNMMXRqcThvNlNBdkh2WHprQXY0Sk5yRFJ4NmlkV2M5Ym1HQVJPNXAKbG8xUUNEaE4wRzRaejFKbVBMYkk2NVNONHZDVlBCRTlhbVhQVjhrQ2dZQmlEMGpPVEx3YVNRTHRscWl0OVdSSgpMK1pCeVlEYk40WE9VNEpweDFDeTdHUStPak5GdWtkZUZXejNBTko3L216MTlnMmV4NjB2cjhWeTVpdzhZQjZWCnpUOUxDRDNNb0dsblAyMUY5S29PZzA5UXgzRGFySTd5S3Y4STI5UG82T0M0dzJYazV2SER5MW1nRSt1aFFSZHoKRXB1QXo5aXpKN3c3dVlUOWI4YnVJZz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

  clone-charts-repo:
    image: extensions/git-clone:dev
    repo: helm-charts
    branch: master

  publish-helm-chart:
    image: extensions/helm:dev
    action: publish

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  tooling-estafette:
    actions:
    - name: deploy-canary
    - name: deploy-stable
    - name: rollback-canary
      hideBadge: true
    - name: restart-stable
      hideBadge: true
    clone: true
    stages:
      deploy:
        image: extensions/gke:dev
        namespace: estafette-ci
        visibility: iap
        iapOauthClientID: estafette.secret(8Nlk-Aq1sDFySTEg.EH4VgB8zQ_Uhimb_MdSPrVyJiOtqAop23D8zDjnksHbVJQ2Q_maGamkn6Kh0TAnD6a_oUpLNTUOUIuxFYmGy_74FqdOCvvvsB5_crRW4dFVWtLq7GRxy-cXzlJ5KjnUaKzXzCPlr17fqhJnBYVCLWQ==.OUMokSQrOO8DjQDtDOSJ_nWqk70cMMF42Q4-SBfJ33jfZiaK9obT5tkyEZmyyfFtVfSRrHo=)
        iapOauthClientSecret: estafette.secret(DtIinOnwxATamw47.3YE8gEmg5Bhrjpbm_oYIrSgY8HVUG97ecLjijXxiLhK7eVOkTe_hlJrEgxcgEplB.97AKjl7ynDZlpMnQ38BY_QIkxiEoO9WbdIjrilJSUQMz96JkMouDmp8CKXvS1TGvTrHJB10=)
        container:
          repository: estafette
          env:
            ESTAFETTE_LOG_FORMAT: v3
          cpu:
            request: 158m
            limit: 316m
          memory:
            request: 483Mi
            limit: 976Mi
          metrics:
            port: 9001
          lifecycle:
            prestopsleep: false
        sidecars:
        - type: openresty
          image: estafette/openresty-sidecar:1.15.8.2
          cpu:
            request: 43m
            limit: 85m
          memory:
            request: 34Mi
            limit: 68Mi
        request:
          timeout: 120s
          maxbodysize: 128M
          clientbodybuffersize: 1m
          proxybuffersnumber: 64
        hosts:
        - estafette.secret(IIZF7TwhQlDeDqtY.s9R8iMp30_frYZoLU7dD1pbdvUg3SCELN3JAXBQ5YrwytnVz.sc58gdlwieDhIsEcQbVLyN3KpkBcjX4b30GYjooRz8zQaXWZFrGeEPJz9SHkSsK7YYOq3ms=)
        - estafette.secret(Ht4w97zYNegDUn90.dQLWAThFkF4B0GoNQVhFXjx8JvWE53Xicu6t00LcQTu83Kt8OBsR.dxjWCCtCykkLkCYBHFhWWS9hKr7I7WtdamC2R0kOioMqTdAQIZ5gtRV0YovWm3wjjqrcP3Y=)
        internalhosts:
        - estafette.secret(P6NY3iwsirEbkO1Z.RETF5WQACjanX8v4AUMWdQyC0IKfltnOj4mX9_yHvKUyOl5dDdLkHJIuIgdR5FAipt0OZQ==.Rl7F7HcHUCGtHJDyHVsefQ7YzYnEltjUj4Pc9_qD568jOVZCR8d5G436StjCQQRcntXGxdo=)
        - estafette.secret(Ms16kDpJJsAW2ttz.5PDwuKRZ8U6NztE7E7iBA3d46dHZoekuYWUXHvtqVsvhjIgmkSZ8tUoWxQJHAD8gv4je5E07dg==.5urwsbdeq1mHjp03TriPCn5l89PYrfQuZXEcC-MhD9rp14Au1heNbzww3acBPVN5rAF9dE0=)
        basepath: /api
        chaosproof: true
        useGoogleCloudCredentials: true
        disableServiceAccountKeyRotation: false
        manifests:
          files:
          - gke/ingress.yaml
          - gke/ingress-github.yaml
          - gke/ingress-bitbucket.yaml
          - gke/ingress-slack.yaml
          - gke/ingress-pubsub.yaml
          - gke/ingress-cloudsource.yaml
          - gke/integrations-certificate-secret.yaml
          data:
            IntegrationsHostname: estafette.secret(TLft87lv4YqRTpEk.RTcbrb0mtJ-y3FK49JErE9kLnhi-mruC2kZPwVQdE4MJqn4UOVqr5TnuIf6G4ftZdw==.Ry0bpK4h7oi4nBSz84AtB90LgxL_jOaCyUFc3FhWXY8NesulkHtkMSQOIPQ6M5ZSbe_CcUE=)
            IntegrationsHostname2: estafette.secret(TPjFkETu4Dig2jmS.IW-QvFT96oSyqX5XZHzO2cOtwao1SxwY8WDgHBDuN6iWnXyyYez1I3mmdWiaKHxVdM_6Lw==.I3WQtUf6sJO46TJbOmHBy8O-x65uRwAC4yjxGgX9c7PR03KvYjQidC4lj_f4brZV509_Uo8=)
        volumemounts:
        - name: client-certs
          mountpath: /cockroach-certs
          volume:
            secret:
              secretName: estafette-ci.client.api
              defaultMode: 0400
        - name: app-secrets
          mountpath: /secrets
          volume:
            secret:
              secretName: estafette-ci-config-secrets
        - name: app-configs
          mountpath: /configs
          volume:
            configMap:
              name: estafette-ci-config-configs

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#release-status'
        when:
          status == 'succeeded' ||
          status == 'failed'

  release-helm-chart:
    stages:
      clone-charts-repo:
        image: extensions/git-clone:dev
        repo: helm-charts
        branch: master

      purge-prerelease-helm-charts:
        image: extensions/helm:dev
        action: purge

      create-github-release:
        image: extensions/github-release:dev

  helm-diff:
    stages:
      diff:
        image: extensions/helm:dev
        credentials: gke-tooling-estafette
        action: diff
        tillerless: true
        namespace: estafette
        values: |-
          jobs:
            namespace: estafette-ci-jobs
          secret:
            valuesAreBase64Encoded: true
            decryptionKey: MVBzdlhWT01raGZBUXVCSWNJR0N0eklkUFhOVjBOWUcK
            useLetsEncryptCertificateAnnotation: true
          hostnames:
          - estafette.secret(z6C9Piz4EhMxWMc8.uxcITmg39HiLJuuqSyPRM06PTWNd6S1x1QxfYYeyGoBLcgkM)
          jaeger:
            enable: true
