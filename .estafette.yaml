builder:
  track: dev
  medium: memory

labels:
  type: service
  app-group: estafette-ci
  team: estafette
  language: golang

version:
  semver:
    major: 1
    minor: 0
    patch: 0
    labelTemplate: '{{branch}}-{{auto}}'
    releaseBranch: 1.0.0

triggers:
- name: migrator
  pipeline:
    name: github.com/estafette/estafette-ci-db-migrator
    branch: main
  builds:
    branch: main

stages:
  build-lint-and-package:
    parallelStages:
      build:
        image: golang:1.16-alpine
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOGC: off
        commands:
        - go build -a -installsuffix cgo -ldflags "-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}" -o ./publish/${ESTAFETTE_GIT_NAME} .

      test:
        image: golang:1.16-alpine
        commands:
        - apk add --update --no-cache build-base
        - go test -short -race ./...

      lint-helm-chart:
        image: extensions/helm:dev
        action: lint

      package-helm-chart:
        image: extensions/helm:dev
        action: package

  integration-tests-prepare:
    services:
    - name: estafette-ci-db-public
      multiStage: true
      image: cockroachdb/cockroach:v21.1.1
      shell: /bin/bash
      env:
        COCKROACH_SKIP_ENABLING_DIAGNOSTIC_REPORTING: "true"
      readiness:
        path: /health?ready=1
        port: 8080
        timeoutSeconds: 120
      commands:
      - /cockroach/cockroach start-single-node --insecure --advertise-addr estafette-ci-db-public

    image: estafette/estafette-ci-db-migrator:${ESTAFETTE_TRIGGER_MIGRATOR_BUILD_VERSION}
    env:
      COCKROACH_INSECURE: true
      ESTAFETTE_LOG_FORMAT: console

  integration-tests:
    image: golang:1.16-alpine
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOGC: off
    commands:
    - go test -run TestIntegration ./...

  bake:
    image: extensions/docker:dev
    action: build
    severity: unknown
    inline: |
      FROM scratch

      LABEL maintainer="estafette.io" \
            description="The ${ESTAFETTE_GIT_NAME} is the component that handles api requests and starts build jobs using the estafette-ci-builder"

      COPY ca-certificates.crt /etc/ssl/certs/
      COPY ${ESTAFETTE_GIT_NAME} /

      ENV GRACEFUL_SHUTDOWN_DELAY_SECONDS="20" \
          ESTAFETTE_LOG_FORMAT="json"

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    repositories:
    - estafette
    path: ./publish
    copy:
    - /etc/ssl/certs/ca-certificates.crt

  push-to-docker-hub:
    image: extensions/docker:dev
    action: push
    repositories:
    - estafette

  test-helm-chart-1.17:
    services:
    - name: kubernetes
      image: bsycorp/kind:latest-1.17
      readiness:
        path: /kubernetes-ready
        port: 10080
        timeoutSeconds: 120
    image: extensions/helm:dev
    action: test
    values: |-
      deployment:
        env:
        - name: JAEGER_DISABLED
          value: 'true'
      secret:
        files:
          secretDecryptionKey: 1PsvXVOMkhfAQuBIcIGCtzIdPXNV0NYG
      ingress:
        enabled: true
        hosts:
        - host: ci.estafette.io
          paths:
          - path: /api/
            backend:
              serviceName: estafette-ci-api
              servicePort: http
          - path: /
            backend:
              serviceName: estafette-ci-web
              servicePort: http
      ingressWebhooks:
        enabled: true
        hosts:
        - host: ci-webhook.estafette.io
          paths:
          - path: /api/integrations/github/
            backend:
              serviceName: estafette-ci-api
              servicePort: http

      extraLabels:
        team: estafette

      extraSecrets:
      - key: gcp
        annotations: {}
        mountPath: /gcp
        data:
          service-account-key.json: |
            {}

      extraConfigmaps:
      - key: templates
        annotations: {}
        mountPath: /templates
        data: |
          manifest-docker.tmpl: |
            labels:
              container: {{.ContainerName}}
              team: {{.TeamName}}
              language: docker

            stages:
              bake:
                image: extensions/docker:stable
                action: build
                repositories:
                - estafette

              push-to-docker-registry:
                image: extensions/docker:stable
                action: push
                repositories:
                - estafette

  test-helm-chart-1.19:
    services:
    - name: kubernetes
      image: bsycorp/kind:latest-1.19
      readiness:
        path: /kubernetes-ready
        port: 10080
        timeoutSeconds: 120
    image: extensions/helm:dev
    action: test
    values: |-
      deployment:
        env:
        - name: JAEGER_DISABLED
          value: 'true'
      secret:
        files:
          secretDecryptionKey: 1PsvXVOMkhfAQuBIcIGCtzIdPXNV0NYG
      ingress:
        enabled: true
        hosts:
        - host: ci.estafette.io
          paths:
          - path: /api/
            pathType: Prefix
            backend:
              service:
                name: estafette-ci-api
                port:
                  name: http
          - path: /
            pathType: Prefix
            backend:
              service:
                name: estafette-ci-web
                port:
                  name: http
      ingressWebhooks:
        enabled: true
        hosts:
        - host: ci-webhook.estafette.io
          paths:
          - path: /api/integrations/github/
            pathType: Prefix
            backend:
              service:
                name: estafette-ci-api
                port:
                  name: http

      extraLabels:
        team: estafette

      extraSecrets:
      - key: gcp
        annotations: {}
        mountPath: /gcp
        data:
          service-account-key.json: |
            {}

      extraConfigmaps:
      - key: templates
        annotations: {}
        mountPath: /templates
        data: |
          manifest-docker.tmpl: |
            labels:
              container: {{.ContainerName}}
              team: {{.TeamName}}
              language: docker

            stages:
              bake:
                image: extensions/docker:stable
                action: build
                repositories:
                - estafette

              push-to-docker-registry:
                image: extensions/docker:stable
                action: push
                repositories:
                - estafette

  clone-charts-repo:
    image: extensions/git-clone:dev
    repo: helm-charts
    branch: main

  publish-helm-chart:
    image: extensions/helm:dev
    action: publish
    repoBranch: main

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  tooling-estafette:
    actions:
    - name: deploy-canary
    - name: deploy-stable
    - name: rollback-canary
      hideBadge: true
    - name: restart-stable
      hideBadge: true
    clone: true
    stages:
      deploy:
        image: extensions/gke:dev
        namespace: estafette-ci
        visibility: iap
        iapOauthClientID: estafette.secret(8Nlk-Aq1sDFySTEg.EH4VgB8zQ_Uhimb_MdSPrVyJiOtqAop23D8zDjnksHbVJQ2Q_maGamkn6Kh0TAnD6a_oUpLNTUOUIuxFYmGy_74FqdOCvvvsB5_crRW4dFVWtLq7GRxy-cXzlJ5KjnUaKzXzCPlr17fqhJnBYVCLWQ==.OUMokSQrOO8DjQDtDOSJ_nWqk70cMMF42Q4-SBfJ33jfZiaK9obT5tkyEZmyyfFtVfSRrHo=)
        iapOauthClientSecret: estafette.secret(DtIinOnwxATamw47.3YE8gEmg5Bhrjpbm_oYIrSgY8HVUG97ecLjijXxiLhK7eVOkTe_hlJrEgxcgEplB.97AKjl7ynDZlpMnQ38BY_QIkxiEoO9WbdIjrilJSUQMz96JkMouDmp8CKXvS1TGvTrHJB10=)
        imagePullSecretUser: estafette.secret(VfjAylmn9HR7zgsc.Gn9lIjF7Pb3Izj6g3fA6wHu-0HNuqxbY7NvwYVCJ5w==.CWRwPC1hcLfF1nipyuEpc7bphtB3-FjwjBGDtYoZBEkoe57G3k5U08tm02qmfujWDUGK-i8=)
        imagePullSecretPassword: estafette.secret(bFuTk7W2-5ZNwN4Y.weEL4hZfGSe7C-wGEAq2EHpoDKnomlKhDLSgc9Y4MtspjPkT0qeeCpmES3cblc5D.7LxMwDlsdDaEJPFbBA7jESxxHr-dj0K7J4GwTfs8JvDjFr-zo3uRFSrIBlKLDuaZJoHNkJQ=)
        container:
          repository: estafette
          env:
            ESTAFETTE_LOG_FORMAT: v3
            CONFIG_FILE_PATH: /configs/git/config.yaml
          cpu:
            request: 50m
          memory:
            request: 283Mi
            limit: 283Mi
          metrics:
            port: 9001
          lifecycle:
            prestopsleep: false
        sidecars:
        - type: openresty
          cpu:
            request: 23m
          memory:
            request: 83Mi
            limit: 83Mi
        customsidecars:
        - name: estafette-ci-api-git-sync
          image: k8s.gcr.io/git-sync:v3.1.5
          env:
          - name: GIT_SYNC_REPO
            value: "estafette.secret(MgMwP-nRoNjystOU.q4Hq0g2nSgFwgjjaBEBEpWYgKJVwkoExjYWBFv4MHTueBDsQchF4MZ2v2YejvF2DGdA3gTGbcwCVrjZJsdDdcA==.q4Hq-hqsEABqjHzaAxpKsWRuJJkploAxw4aXFusPVSyDTHcDcn9zZ1FC-KOnuWUuBAD9nx8=)"
          - name: GIT_SYNC_BRANCH
            value: "git-sync"
          - name: GIT_SYNC_DEPTH
            value: "1"
          - name: GIT_SYNC_ROOT
            value: "/configs"
          - name: GIT_SYNC_DEST
            value: "git"
          - name: GIT_SYNC_SSH
            value: "true"
          - name: GIT_SSH_KEY_FILE
            value: "/secrets/git-sync-rsa"
          - name: GIT_KNOWN_HOSTS
            value: "false"
          - name: GIT_SYNC_MAX_SYNC_FAILURES
            value: "10"
          - name: GIT_SYNC_WAIT
            value: "60"
          securityContext:
            runAsUser: 65534 # git-sync user
          resources:
            requests:
              cpu: 11m
              memory: 83Mi
            limits:
              memory: 83Mi
          volumeMounts:
          - name: app-configs
            mountPath: /configs
          - name: app-secrets
            mountPath: /secrets
        vpa:
          enabled: true
          updateMode: "Off"
        request:
          timeout: 120s
          maxbodysize: 128M
          clientbodybuffersize: 1m
          proxybuffersnumber: 64
        hosts:
        - estafette.secret(IIZF7TwhQlDeDqtY.s9R8iMp30_frYZoLU7dD1pbdvUg3SCELN3JAXBQ5YrwytnVz.sc58gdlwieDhIsEcQbVLyN3KpkBcjX4b30GYjooRz8zQaXWZFrGeEPJz9SHkSsK7YYOq3ms=)
        - estafette.secret(Ht4w97zYNegDUn90.dQLWAThFkF4B0GoNQVhFXjx8JvWE53Xicu6t00LcQTu83Kt8OBsR.dxjWCCtCykkLkCYBHFhWWS9hKr7I7WtdamC2R0kOioMqTdAQIZ5gtRV0YovWm3wjjqrcP3Y=)
        internalhosts:
        - estafette.secret(P6NY3iwsirEbkO1Z.RETF5WQACjanX8v4AUMWdQyC0IKfltnOj4mX9_yHvKUyOl5dDdLkHJIuIgdR5FAipt0OZQ==.Rl7F7HcHUCGtHJDyHVsefQ7YzYnEltjUj4Pc9_qD568jOVZCR8d5G436StjCQQRcntXGxdo=)
        - estafette.secret(Ms16kDpJJsAW2ttz.5PDwuKRZ8U6NztE7E7iBA3d46dHZoekuYWUXHvtqVsvhjIgmkSZ8tUoWxQJHAD8gv4je5E07dg==.5urwsbdeq1mHjp03TriPCn5l89PYrfQuZXEcC-MhD9rp14Au1heNbzww3acBPVN5rAF9dE0=)
        basepath: /api
        chaosproof: true
        useGoogleCloudCredentials: true
        disableServiceAccountKeyRotation: false
        manifests:
          files:
          - gke/ingress.yaml
          - gke/ingress-github.yaml
          - gke/ingress-bitbucket.yaml
          - gke/ingress-slack.yaml
          - gke/ingress-pubsub.yaml
          - gke/ingress-cloudsource.yaml
          - gke/integrations-certificate-secret.yaml
          data:
            IntegrationsHostname: estafette.secret(TLft87lv4YqRTpEk.RTcbrb0mtJ-y3FK49JErE9kLnhi-mruC2kZPwVQdE4MJqn4UOVqr5TnuIf6G4ftZdw==.Ry0bpK4h7oi4nBSz84AtB90LgxL_jOaCyUFc3FhWXY8NesulkHtkMSQOIPQ6M5ZSbe_CcUE=)
            IntegrationsHostname2: estafette.secret(TPjFkETu4Dig2jmS.IW-QvFT96oSyqX5XZHzO2cOtwao1SxwY8WDgHBDuN6iWnXyyYez1I3mmdWiaKHxVdM_6Lw==.I3WQtUf6sJO46TJbOmHBy8O-x65uRwAC4yjxGgX9c7PR03KvYjQidC4lj_f4brZV509_Uo8=)
        volumemounts:
        - name: client-certs
          mountpath: /cockroach-certs
          volume:
            secret:
              secretName: estafette-ci.client.api
              defaultMode: 0400
        - name: app-secrets
          mountpath: /secrets
          volume:
            secret:
              secretName: estafette-ci-config-secrets
        - name: app-configs
          mountpath: /configs
          volume:
            emptyDir: {}
        - name: app-templates
          mountpath: /templates
          volume:
            configMap:
              name: estafette-ci-manifest-templates-configs

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#release-status'
        when:
          status == 'succeeded' ||
          status == 'failed'

  release-helm-chart:
    stages:
      clone-charts-repo:
        image: extensions/git-clone:dev
        repo: helm-charts
        branch: main

      purge-prerelease-helm-charts:
        image: extensions/helm:dev
        action: purge
        repoBranch: main

      create-github-release:
        image: extensions/github-release:dev

  helm-diff:
    stages:
      diff:
        image: extensions/helm:dev
        credentials: gke-tooling-estafette
        action: diff
        tillerless: true
        namespace: estafette
        values: |-
          jobs:
            namespace: estafette-ci-jobs
          secret:
            decryptionKey: 1PsvXVOMkhfAQuBIcIGCtzIdPXNV0NYG
          hostnames:
          - estafette.secret(z6C9Piz4EhMxWMc8.uxcITmg39HiLJuuqSyPRM06PTWNd6S1x1QxfYYeyGoBLcgkM)
          jaeger:
            enable: true